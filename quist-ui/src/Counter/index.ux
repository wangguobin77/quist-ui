<import name='quist-counter' src='@quist-ui/quist-counter/index'></import>

<template>
  <div class="counter-demo">
    <div class="demo-block">
      <div class="item-box">
        <text class="item-txt">默认计数器展示:</text>
        <quist-counter value="{{curvala}}" @on-change="valueChangeA"></quist-counter>
        <text class="item-show">当前的值是：{{curvala}}</text>
      </div>
      <div class="item-box">
        <text class="item-txt">禁止更改计数器展示:</text>
        <quist-counter value="{{10}}" disabled></quist-counter>
      </div>
      <div class="item-box">
        <text class="item-txt">设置最大值的计数器展示(最大值为10):</text>
        <quist-counter value="{{curvalb}}" max="{{10}}" @on-change="valueChangeB"></quist-counter>
        <text class="item-show">当前的值是：{{curvalb}}</text>
      </div>
      <div class="item-box">
        <text class="item-txt">设置最小值的计数器展示(最小值为2):</text>
        <quist-counter value="{{1}}" min="{{2}}" @on-change="valueChangeC"></quist-counter>
        <text class="item-show">当前的值是：{{curvalc}}</text>
      </div>
    </div>
    <div class="demo-block">
      <div class="item-box">
        <text class="item-txt">自定义计数器样式:</text>
        <quist-counter value="{{curvald}}" @on-change="valueChangeD" number-border-color="transparent" number-bg-color="transparent" border-radius="{{60}}" min="{{1}}" max="{{5}}"></quist-counter>
        <text class="item-show">当前的值是：{{curvald}}</text>
      </div>
    </div>
  <div>
</template>

<style>
  .counter-demo {
    flex-direction: column;
    background-color: #f5f5f5;
  }

  .demo-block {
    flex-direction: column;
    background-color: #ffffff;
    margin: 20px;
    padding: 20px;
    border-radius: 10px;
  }

  .item-box {
    flex-direction: column;
    margin: 30px 10px;
  }

  .item-txt {
    margin-bottom: 10px;
    font-size: 32px;
    color: #333333;
  }

  .item-show {
    margin-top: 10px;
    color: #999999;
  }
</style>

<script>
  export default {
    data() {
      return {
        curvala: 1,
        curvalb: 3,
        curvalc: 2,
        curvald: 1
      }
    },
    onInit() {
      this.$page.setTitleBar({ text: 'Counter' })
    },
    valueChangeA(e) {
      this.curvala = e.detail.value
    },
    valueChangeB(e) {
      this.curvalb = e.detail.value
    },
    valueChangeC(e) {
      this.curvalc = e.detail.value
    },
    valueChangeD(e) {
      this.curvald = e.detail.value
    }
  }
</script>